@model StudentMvcApp.Models.Student

@{
    ViewData["Title"] = "Edit Student";
}

<h2>Edit Student</h2>

<!-- Select2 CSS -->
<link href="https://cdn.jsdelivr.net/npm/select2@4.1.0-rc.0/dist/css/select2.min.css" rel="stylesheet" />

<!-- jQuery + Select2 -->
<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/select2@4.1.0-rc.0/dist/js/select2.min.js"></script>

<form id="editStudentForm">
    <input type="hidden" id="Id" value="@Model.Id" />

    <div class="form-group mb-3">
        <label for="Name">Name</label>
        <input type="text" id="Name" class="form-control" value="@Model.Name" />
    </div>

    <div class="form-group mb-3">
        <label for="CourseIds">Select Course(s)</label>
        <select id="CourseIds" class="form-control" multiple="multiple" style="width: 100%;"></select>
    </div>

    <button type="submit" class="btn btn-primary">Save</button>
    <a href="/Student/Index" class="btn btn-secondary">Cancel</a>
</form>

<script>
    $(document).ready(function () {
        const selectedCourses = "@Model.CourseNames".split(',').map(s => s.trim());

        $('#CourseIds').select2({
            placeholder: "Select courses...",
            allowClear: true
        });

        $.get("/Course/GetAll", function (courses) {
            courses.forEach(course => {
                const isSelected = selectedCourses.includes(course.name);
                const option = new Option(course.name, course.id, isSelected, isSelected);
                $("#CourseIds").append(option);
            });

            $('#CourseIds').trigger('change');
        });

        $("#editStudentForm").on("submit", function (e) {
            e.preventDefault();

            const studentData = {
                id: parseInt($("#Id").val()),
                name: $("#Name").val(),
                courseIds: $("#CourseIds").val()?.map(id => parseInt(id))
            };

            $.ajax({
                type: "POST",
                url: "/Student/EditJson",
                contentType: "application/json",
                data: JSON.stringify(studentData),
                success: function (response) {
                    toastr.success(response.message, "Success");
                    setTimeout(() => {
                        window.location.href = "/Student/Index";
                    }, 1500);
                },
                error: function (xhr) {
                    const errors = xhr.responseJSON;
                    let errorMessages = "";
                    for (let field in errors) {
                        errorMessages += field + ": " + errors[field].join(", ") + "\n";
                    }
                    toastr.error("Validation failed:\n" + errorMessages);
                }
            });
        });
    });
</script>
